---
title: 'Sesión #4: Pegado de Multibases'

---
#Enunciado

<iframe src="S04.pdf" width="100%" height="800"></iframe>


#Solución Propuesta

<article>
<h3><a href="../DataSets/merge_firms.dta">Base de Datos </a></h3>
<div class="summary">
<p>
Acá podrás descargar la base de datos que ocuparemos en este taller href="../DataSets/merge_firms.dta">Descargar Base de DAtos</a>. 
</p>
<a class="btn btn-outline-primary btn-sm" href="../DataSets/merge_firms.dta">Descargar Base de DAtos</a>
</div>
</article>



##Antes de comenzar:  Organización de los directorios (Una vez mas)

Siguiendo el formato de la sesión anterior, debemos crear tres carpteras. Tal como se ve en la imagen. De esta forma, podremos hacer referencias a cada una de ellas mediante variables globales.

```{r Folders, echo=FALSE, fig.cap="Folders", out.width = '15%'}
knitr::include_graphics("S04_folders.PNG")
```

## Preambulo y directorios

Lo primero que debemos realizar es lo usual en un preambulo, que es _clear all_ y _set more off_. El primero permite operar con un Stata completamrnte vacío y el segundo permite no tener que clickear en *more* cuando ejecutemos programas muy largos.
```
//===========================================================================//
// 		TALLER STATA SESION #4
// 		AUTOR: ALVARO GUTIERREZ VARGAS 
//		FECHA ULTIMA MODIFICACION : 03-04-2018
//===========================================================================//
//  PRELIMINARES 
clear all  /*Elimina todo en Stata (base de datos, matrices, locals, etc)*/
set more off  /*Impide que tengamos que estar clickeando "more" cuando el do es muy largo*/
```

Ahora solo nos queda anclar las carpetas que hemos generado con variables globales, de la siguiente forma. 
```
//===========================================================================//
//  GLOBALS
	global data_row = "C:\tu_ruta\ROW DATA"
	global data_prepared "C:\tu_ruta\PREPARED DATA"
```

#Merge:
## Pregunta (a)
<article>
<div class="summary">
Acá pordras <a class="btn btn-outline-primary btn-sm" href="../DataSets/merge_firms_to_add.dta">Descargar Base de Datos</a>
que ocuparemos en esta parte.</div>
</article>
Para consolidar la base de datos que se le ha entrgado con la base inicial, debemos darnos cuenta que el _unique identifier_ que nos permitirá pegar ambas bases es la variable __id__.Por lo que pegaremos ambas bases ocupando el comando [merge](https://www.stata.com/manuals13/dmerge.pdf).
```
merge 1:1 id using "$data_prepared\merge_firms_to_add" , gen(merge_1_1)
```
La linea anterior, luego de invocar al comando merge, se lee de la siguiente forma:

(1) _1:1_ hace alusión a la forma en la que haremos el pegado de la base de datos. Esta indica que las observaciones se encuentran sin duplicados en cada una de las bases. En otras palabras, solo contamos con una observación para cada una de las firmas en cada una de las bases.
(2) using "_$data_prepared\merge_firms_to_add_": Nos indica que le pegado se realizará usando la base de datos _merge_firms_to_add_. La cual se encuentra alojada dentro de la carpeta _data_prepared_ la que anclamos con los global al inicio de nuestro programa.
(3) , gen(merge_1_1): Primero acá debemos notar que al existir una coma, estamos entrando al dominio de las __opciones__ del comando. Es decir, le estamos agregando opciones que son optativas para el comando merge. En este caso, le estamod indicango que genere (_gen_) una variable llamada __merge_1_1__ la cual será una variable útil para analizar el resultado de nuestro pegado. Lo discutiremos en más detalle a cuando veamos el output del comando.



El output que obtenemos al correr el comando anterior corresponde a:
```
merge 1:1 id using "$data_row\merge_firms_to_add" , gen(merge_1_1)

    Result                           # of obs.
    -----------------------------------------
    not matched                             0
    matched                               191  (merge_1_1==3)
    -----------------------------------------

save  "$data_prepared\merge_firms_complete" ,replace


file C:\tu_ruta\PREPARED DATA\merge_firms_complete.dta saved
```
Este nos indica, que de las 191 observaciones que posee la base que teníamos precargada (_merge_firms_), 191 estuvieron presentes en la base que le adicionamos (merge_firms_to_add). Cabe destacar que en el lenguaje del comando [merge](https://www.stata.com/manuals13/dmerge.pdf), la base que tenemos precargada Stata la denomina "Master" y la que le adicionamos es la llamana "Using".

Finalmente, grabamos esta nueva base consolidada con el nombre _merge_firms_complete.dta_ en la carpeta alojada en nuestro global "_data_prepared_"


## Pregunta (b)

<article>
<div class="summary">
Acá pordras <a class="btn btn-outline-primary btn-sm" href="../DataSets/merge_countries">Descargar Base de Datos</a>
que ocuparemos en esta parte.</div>
</article>

Ahora lo que debemos realizar es el pegado de una base de datos que contiene una dimesión inferior a la que tenemos cargada, tal como se puede apreciar en la figura del enunciado. Por ende, no podremos realizar un pegado 1:1. Dado que no tendremos una observacion en la base _using_ para cada una de las observaciones de la base _master_. De este modo, dado que la base de datos que queremos agregar a la _master_ posee una dimensión inferior, la única forma de que esta operación sea posible(manteniendo las dimensiones de la base master) es que las observaciones de la base _using_ se repitan hasta alcanzar el número de filas en _master_. De esta forma, dado que queremos agregar información que representa solo al país al cual pertenece la firma. Tendremos que cada fila de _using_ que se repetirá para todas las observaciones de ese país en _master_. Con lo que al correr la siguiente linea generaremos el pegado.

```
merge m:1 country using "$data_row\merge_countries" , gen(merge_m_1)


   Result                           # of obs.
    -----------------------------------------
    not matched                            20
        from master                        20  (merge_m_1==1)
        from using                          0  (merge_m_1==2)

    matched                               171  (merge_m_1==3)
    -----------------------------------------
```
La lectura del output es la siguiente, se puede apreciar que existieron 20 observaciones que no fueron __matched__ (primera linea: _not matched_) de las cuales 20 de la base _master_ no tuvieron correspondencia en la base _master_ y cero en _using_. Para ver esto más claramente analicemos la siguiente imagen que fue generada con el comando.

```
br id CompanyCommonName country inflation tax_rate population merge_m_1
```
Desde esta fgura podemos colegir lo siguiente:

(1) Vemos no teníamos información sobre PERÚ en la base _using_, por lo que las filas correspondientes a las firmas de ese país, no contienen la información de _inflation_, _tax_rate_ ni _population_

(2) Por otro lado, vemos lo que habíamos comentado en el parrafo anterior.Toda la información contenida para MÉXICO, en la base _using_ fue repetida para cada una de las firmas que se ubican en dicho país.  

(3) En base al punto anterior, podemos hacer explícito que el pegado fue un __m:1__ debido a que, en la terminolgía del Stata, lo que realizamos fue un _MANY_ to _ONE_. Lo que en términos prácticos, significa que a muchas filas de la base _master_ le pegamos la misma fila de la base  _using_.
```{r br_1_m, echo=FALSE, fig.cap="Folders", out.width = '100%'}
knitr::include_graphics("merge_m_1.PNG")
```
Finalmente, guardamos la base que acabamos de generar como:
```
save  "$data_prepared\merge_firms_complete" ,replace
```

## Pregunta (c)

<article>
<div class="summary">
Acá pordras <a class="btn btn-outline-primary btn-sm" href="../DataSets/append_2013">Descargar Base de Datos</a>
que ocuparemos en esta parte.</div>
</article>

Finalmente, para realizar el pegado de la última base, cambiamos la forma de pegado, dado que ahora agregaremos más _filas_ a la base de datos (lo que hicimos anteriormente fue agregar más _columnas_) Ahora lo que debemos hacer se resume en las dos lineas siguientes.

```
use  "$data_prepared\merge_firms_and_countries" ,replace

append using "$data_row\append_2013"
```
El comando [append](https://www.stata.com/manuals13/dappend.pdf), lo que nos permite es agregar más filas, ocupando como _Unique Indetifier_ el nombre de las columnas de nuestras bases de datos. Con lo que adherirá las filas de la base _using_ a las columnas que corresponda, en nuestra base _master_.

## Pregunta (d)

En caso de que hubieramos tenido cargada la base _merge_countries_ en vez de _merge_firms_complete_, lo unico que hubiera cambiado, es que el pegado hubiera sido __1:m__, debido a que ahora le pegaremos _MANY_ filas to _ONE_ fila en nuestra base _master_ (De hecho, en este caso, nuestra base _master_ solo contaría con 5 observaciones).

```
 use  "$data_row\merge_countries" , clear  

 merge 1:m country using  "$data_prepared\merge_firms_complete"  , gen(merge_1_m)

    Result                           # of obs.
    -----------------------------------------
    not matched                            20
        from master                         0  (merge_1_m==1)
        from using                         20  (merge_1_m==2)

    matched                               171  (merge_1_m==3)
    -----------------------------------------
```





